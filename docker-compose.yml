version: '3.9'

services:
  dnsmasq:
    image: jpillora/dnsmasq
    container_name: dnsmasq
    command:
      ["-k", "--log-facility=-", "--address=/laravel.site1/172.30.0.3", "--address=/laravel.site2/172.30.0.3"]
    ports:
      - "53:53/udp"
    networks:
      app_network:
        ipv4_address: 172.30.0.3

  db:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: laravel
      MYSQL_USER: laravel_user
      MYSQL_PASSWORD: laravel_pass
    volumes:
      - db_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      app_network:
        ipv4_address: 172.30.0.4
    
  traefik:
    image: traefik:v2.9
    container_name: traefik
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8085:8080" 
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      app_network:
        ipv4_address: 172.30.0.2

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    environment:
      PMA_HOST: db
      PMA_PORT: 3306
      MYSQL_ROOT_PASSWORD: root
    ports:
      - "8083:80"
    depends_on:
      - db
    networks:
      app_network:
        ipv4_address: 172.30.0.9
    dns:
      - 127.0.0.11

  php1:
    build:
      context: ./php1
    container_name: php1
    networks:
      app_network:
        ipv4_address: 172.30.0.5
    dns:
      - 172.30.0.3
    volumes:
      - ./app1:/var/www/html
      - node_modules1:/var/www/html/node_modules
      - vendor1:/var/www/html/vendor
      - ./app1/.env:/var/www/html/.env
    environment:
      SERVER_NAME: nginx1
      DB_HOST: db
      DB_DATABASE: laravel
      DB_USERNAME: laravel_user
      DB_PASSWORD: laravel_pass
    labels:
      - "traefik.http.routers.laravel1.rule=Host(`laravel.site1`)"
      - "traefik.http.services.laravel1.loadbalancer.server.port=9000"
    depends_on:
      - db
      - node_modules1
      - vendor1

  php2:
    build:
      context: ./php2
    container_name: php2
    networks:
      app_network:
        ipv4_address: 172.30.0.6
    dns:
      - 172.30.0.3
    volumes:
      - ./app2:/var/www/html
      - node_modules2:/var/www/html/node_modules
      - vendor2:/var/www/html/vendor
      - ./app2/.env:/var/www/html/.env
    environment:
      SERVER_NAME: nginx2
      DB_HOST: db
      DB_DATABASE: laravel
      DB_USERNAME: laravel_user
      DB_PASSWORD: laravel_pass
    labels:
      - "traefik.http.routers.laravel2.rule=Host(`laravel.site2`)"
      - "traefik.http.services.laravel2.loadbalancer.server.port=9000"
    depends_on:
      - db
      - node_modules2
      - vendor2

  nginx1:
    build:
      context: ./nginx1
    container_name: nginx1
    ports:
      - "8081:80"
      - "443:443"     # HTTPS
    networks:
      app_network:
        ipv4_address: 172.30.0.7
    volumes:
      - ./app1:/var/www/html
      - ./nginx1/default.conf:/etc/nginx/conf.d/default.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - php1

  nginx2:
    build:
      context: ./nginx2
    container_name: nginx2
    ports:
      - "8082:80"
      - "8443:8443"     # HTTPS
    networks:
      app_network:
        ipv4_address: 172.30.0.8
    volumes:
      - ./app2:/var/www/html
      - ./nginx2/default.conf:/etc/nginx/conf.d/default.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - php2

  node_modules1:
    image: node:16
    container_name: node_modules1
    working_dir: /var/www/html
    volumes:
      - ./app1:/var/www/html
      - node_modules1:/var/www/html/node_modules
    entrypoint: ["sh", "-c", "npm install && tail -f /dev/null"]

  node_modules2:
    image: node:16
    container_name: node_modules2
    working_dir: /var/www/html
    volumes:
      - ./app2:/var/www/html
      - node_modules2:/var/www/html/node_modules
    entrypoint: ["sh", "-c", "npm install && tail -f /dev/null"]

  vendor1:
    image: composer:latest
    container_name: vendor1
    working_dir: /var/www/html
    volumes:
      - ./app1:/var/www/html
      - vendor1:/var/www/html/vendor
    entrypoint: ["sh", "-c", "composer install && ls -l /var/www/html/vendor && tail -f /dev/null"]

  vendor2:
    image: composer:latest
    container_name: vendor2
    working_dir: /var/www/html
    volumes:
      - ./app2:/var/www/html
      - vendor2:/var/www/html/vendor
    entrypoint: ["sh", "-c", "composer install && ls -l /var/www/html/vendor && tail -f /dev/null"]

networks:
  app_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.30.0.0/24

volumes:
  db_data:
  node_modules1:
  node_modules2:
  vendor1:
  vendor2:
